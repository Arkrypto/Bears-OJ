# Project: lisp
# Makefile created by Dev-C++ 5.11

CPP      = gcc.exe
CC       = gcc.exe
WINDRES  = windres.exe
OBJ      = 1-1.o 1-2.o doge_code.o evalution.o error_handling.o s_expression.o q_expression.o values.o mpc.o functions.o conditions.o string.o
LINKOBJ  = 1-1.o 1-2.o doge_code.o evalution.o error_handling.o s_expression.o q_expression.o values.o mpc.o functions.o conditions.o string.o
LIBS     = -L"C:/Programming/Dev-Cpp/MinGW64/lib" -L"C:/Programming/Dev-Cpp/MinGW64/x86_64-w64-mingw32/lib" -static-libgcc
INCS     = -I"C:/Programming/Dev-Cpp/MinGW64/include" -I"C:/Programming/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include" -I"C:/Programming/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include"
CXXINCS  = -I"C:/Programming/Dev-Cpp/MinGW64/include" -I"C:/Programming/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include" -I"C:/Programming/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include" -I"C:/Programming/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++"
BIN      = lisp.exe
CXXFLAGS = $(CXXINCS) 
CFLAGS   = $(INCS) 
RM       = rm.exe -f

.PHONY: all all-before all-after clean clean-custom

all: all-before $(BIN) all-after

clean: clean-custom
	${RM} $(OBJ) $(BIN)

$(BIN): $(OBJ)
	$(CPP) $(LINKOBJ) -o $(BIN) $(LIBS)

1-1.o: 1-1.c
	$(CPP) -c 1-1.c -o 1-1.o $(CXXFLAGS)

1-2.o: 1-2.c
	$(CPP) -c 1-2.c -o 1-2.o $(CXXFLAGS)

doge_code.o: doge_code.c
	$(CPP) -c doge_code.c -o doge_code.o $(CXXFLAGS)

evalution.o: evalution.c
	$(CPP) -c evalution.c -o evalution.o $(CXXFLAGS)

error_handling.o: error_handling.c
	$(CPP) -c error_handling.c -o error_handling.o $(CXXFLAGS)

s_expression.o: s_expression.c
	$(CPP) -c s_expression.c -o s_expression.o $(CXXFLAGS)

q_expression.o: q_expression.c
	$(CPP) -c q_expression.c -o q_expression.o $(CXXFLAGS)

values.o: values.c
	$(CPP) -c values.c -o values.o $(CXXFLAGS)

mpc.o: mpc.c
	$(CPP) -c mpc.c -o mpc.o $(CXXFLAGS)

functions.o: functions.c
	$(CPP) -c functions.c -o functions.o $(CXXFLAGS)

conditions.o: conditions.c
	$(CPP) -c conditions.c -o conditions.o $(CXXFLAGS)

string.o: string.c
	$(CPP) -c string.c -o string.o $(CXXFLAGS)
